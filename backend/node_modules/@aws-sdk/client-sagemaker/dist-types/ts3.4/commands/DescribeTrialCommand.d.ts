import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  DescribeTrialRequest,
  DescribeTrialResponse,
} from "../models/models_2";
import {
  SageMakerClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SageMakerClient";
export interface DescribeTrialCommandInput extends DescribeTrialRequest {}
export interface DescribeTrialCommandOutput
  extends DescribeTrialResponse,
    __MetadataBearer {}
export declare class DescribeTrialCommand extends $Command<
  DescribeTrialCommandInput,
  DescribeTrialCommandOutput,
  SageMakerClientResolvedConfig
> {
  readonly input: DescribeTrialCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeTrialCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SageMakerClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeTrialCommandInput, DescribeTrialCommandOutput>;
  private serialize;
  private deserialize;
}
