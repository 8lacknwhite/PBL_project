import {
  ActionStatus,
  ActionSummary,
  AdditionalInferenceSpecificationDefinition,
  AlgorithmSortBy,
  AlgorithmSpecification,
  AlgorithmSummary,
  AppDetails,
  AppImageConfigDetails,
  AppImageConfigSortKey,
  AppSortKey,
  AppSpecification,
  ArtifactSummary,
  AssociationEdgeType,
  AssociationSummary,
  AutoMLCandidate,
  AutoMLJobStatus,
  AutoMLJobStepMetadata,
  AutoMLJobSummary,
  AutoMLSortBy,
  AutoMLSortOrder,
  BatchStrategy,
  CacheHitResult,
  CallbackStepMetadata,
  CandidateSortBy,
  CandidateStatus,
  Channel,
  CheckpointConfig,
  ClarifyCheckStepMetadata,
  CodeRepositorySortBy,
  CodeRepositorySortOrder,
  CodeRepositorySummary,
  CompilationJobStatus,
  CompilationJobSummary,
  ConditionStepMetadata,
  ContainerDefinition,
  ContextSummary,
  InferenceSpecification,
  MetadataProperties,
  ModelApprovalStatus,
  ModelPackageStatus,
  OutputDataConfig,
  OutputParameter,
  ResourceConfig,
  StoppingCondition,
  Tag,
  TransformInput,
  TransformOutput,
  TransformResources,
  UserContext,
  VpcConfig,
} from "./models_0";
import {
  _InstanceType,
  DataProcessing,
  DebugHookConfig,
  DebugRuleConfiguration,
  DebugRuleEvaluationStatus,
  DriftCheckBaselines,
  ExperimentConfig,
  HubContentType,
  InferenceExecutionConfig,
  InferenceExperimentType,
  LabelingJobInputConfig,
  ModelCardSecurityConfig,
  ModelCardStatus,
  ModelClientConfig,
  ModelMetrics,
  ModelPackageValidationSpecification,
  ModelVariantConfig,
  MonitoringScheduleConfig,
  MonitoringType,
  NetworkConfig,
  ParallelismConfiguration,
  ProcessingInput,
  ProcessingOutputConfig,
  ProcessingResources,
  ProcessingStoppingCondition,
  RetryStrategy,
  ServiceCatalogProvisioningDetails,
  SourceAlgorithmSpecification,
  StudioLifecycleConfigAppType,
  TensorBoardOutputConfig,
  TrialComponentArtifact,
  TrialComponentParameterValue,
  TrialComponentStatus,
  UiTemplate,
} from "./models_1";
import {
  Device,
  DeviceDeploymentSummary,
  DeviceFleetSummary,
  DeviceSummary,
  Direction,
  DomainDetails,
  Edge,
  EdgeDeploymentPlanSummary,
  EdgePackagingJobStatus,
  EdgePackagingJobSummary,
  EMRStepMetadata,
  Endpoint,
  EndpointConfigSortKey,
  EndpointConfigSummary,
  EndpointSortKey,
  EndpointStatus,
  EndpointSummary,
  ExecutionStatus,
  Experiment,
  ExperimentSummary,
  FailStepMetadata,
  FeatureGroup,
  FeatureGroupSortBy,
  FeatureGroupSortOrder,
  FeatureGroupStatus,
  FeatureGroupSummary,
  FeatureMetadata,
  Filter,
  FlowDefinitionSummary,
  HubContentInfo,
  HubContentSortBy,
  HubInfo,
  HubSortBy,
  HumanTaskUiSummary,
  HyperParameterTrainingJobSummary,
  HyperParameterTuningJobSearchEntity,
  HyperParameterTuningJobSortByOptions,
  HyperParameterTuningJobStatus,
  HyperParameterTuningJobSummary,
  Image,
  ImageSortBy,
  ImageSortOrder,
  ImageVersion,
  ImageVersionSortBy,
  ImageVersionSortOrder,
  InferenceExperimentStatus,
  InferenceExperimentStopDesiredState,
  InferenceExperimentSummary,
  InferenceRecommendationsJob,
  InferenceRecommendationsJobStep,
  LabelCounters,
  LabelingJobForWorkteamSummary,
  LabelingJobOutput,
  LabelingJobStatus,
  MetricData,
  ModelArtifacts,
  ModelCardExportJobStatus,
  ModelPackageGroupStatus,
  ModelPackageStatusDetails,
  MonitoringExecutionSummary,
  NotebookInstanceStatus,
  OfflineStoreStatusValue,
  PipelineExecutionStatus,
  PipelineExperimentConfig,
  PipelineStatus,
  ProcessingJobStatus,
  ProjectStatus,
  RecommendationJobStatus,
  RecommendationStepType,
  ScheduleStatus,
  SecondaryStatus,
  SecondaryStatusTransition,
  ServiceCatalogProvisionedProductDetails,
  SpaceStatus,
  SubscribedWorkteam,
  TrainingJobStatus,
  TransformJobStatus,
  TrialComponentMetricSummary,
  TrialComponentSource,
  TrialSource,
  UserProfileStatus,
  WarmPoolResourceStatus,
  WarmPoolStatus,
  Workforce,
  Workteam,
} from "./models_2";
export interface LabelingJobSummary {
  LabelingJobName: string | undefined;
  LabelingJobArn: string | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  LabelingJobStatus: LabelingJobStatus | string | undefined;
  LabelCounters: LabelCounters | undefined;
  WorkteamArn: string | undefined;
  PreHumanTaskLambdaArn: string | undefined;
  AnnotationConsolidationLambdaArn?: string;
  FailureReason?: string;
  LabelingJobOutput?: LabelingJobOutput;
  InputConfig?: LabelingJobInputConfig;
}
export interface LambdaStepMetadata {
  Arn?: string;
  OutputParameters?: OutputParameter[];
}
export interface LineageGroupSummary {
  LineageGroupArn?: string;
  LineageGroupName?: string;
  DisplayName?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
}
export declare const LineageType: {
  readonly ACTION: "Action";
  readonly ARTIFACT: "Artifact";
  readonly CONTEXT: "Context";
  readonly TRIAL_COMPONENT: "TrialComponent";
};
export type LineageType = (typeof LineageType)[keyof typeof LineageType];
export declare const SortActionsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortActionsBy = (typeof SortActionsBy)[keyof typeof SortActionsBy];
export declare const SortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface ListActionsRequest {
  SourceUri?: string;
  ActionType?: string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortActionsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListActionsResponse {
  ActionSummaries?: ActionSummary[];
  NextToken?: string;
}
export interface ListAlgorithmsInput {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  NextToken?: string;
  SortBy?: AlgorithmSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ListAlgorithmsOutput {
  AlgorithmSummaryList: AlgorithmSummary[] | undefined;
  NextToken?: string;
}
export interface ListAliasesRequest {
  ImageName: string | undefined;
  Alias?: string;
  Version?: number;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAliasesResponse {
  SageMakerImageVersionAliases?: string[];
  NextToken?: string;
}
export interface ListAppImageConfigsRequest {
  MaxResults?: number;
  NextToken?: string;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  ModifiedTimeBefore?: Date;
  ModifiedTimeAfter?: Date;
  SortBy?: AppImageConfigSortKey | string;
  SortOrder?: SortOrder | string;
}
export interface ListAppImageConfigsResponse {
  NextToken?: string;
  AppImageConfigs?: AppImageConfigDetails[];
}
export interface ListAppsRequest {
  NextToken?: string;
  MaxResults?: number;
  SortOrder?: SortOrder | string;
  SortBy?: AppSortKey | string;
  DomainIdEquals?: string;
  UserProfileNameEquals?: string;
  SpaceNameEquals?: string;
}
export interface ListAppsResponse {
  Apps?: AppDetails[];
  NextToken?: string;
}
export declare const SortArtifactsBy: {
  readonly CREATION_TIME: "CreationTime";
};
export type SortArtifactsBy =
  (typeof SortArtifactsBy)[keyof typeof SortArtifactsBy];
export interface ListArtifactsRequest {
  SourceUri?: string;
  ArtifactType?: string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortArtifactsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListArtifactsResponse {
  ArtifactSummaries?: ArtifactSummary[];
  NextToken?: string;
}
export declare const SortAssociationsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly DESTINATION_ARN: "DestinationArn";
  readonly DESTINATION_TYPE: "DestinationType";
  readonly SOURCE_ARN: "SourceArn";
  readonly SOURCE_TYPE: "SourceType";
};
export type SortAssociationsBy =
  (typeof SortAssociationsBy)[keyof typeof SortAssociationsBy];
export interface ListAssociationsRequest {
  SourceArn?: string;
  DestinationArn?: string;
  SourceType?: string;
  DestinationType?: string;
  AssociationType?: AssociationEdgeType | string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortAssociationsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAssociationsResponse {
  AssociationSummaries?: AssociationSummary[];
  NextToken?: string;
}
export interface ListAutoMLJobsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  StatusEquals?: AutoMLJobStatus | string;
  SortOrder?: AutoMLSortOrder | string;
  SortBy?: AutoMLSortBy | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAutoMLJobsResponse {
  AutoMLJobSummaries: AutoMLJobSummary[] | undefined;
  NextToken?: string;
}
export interface ListCandidatesForAutoMLJobRequest {
  AutoMLJobName: string | undefined;
  StatusEquals?: CandidateStatus | string;
  CandidateNameEquals?: string;
  SortOrder?: AutoMLSortOrder | string;
  SortBy?: CandidateSortBy | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCandidatesForAutoMLJobResponse {
  Candidates: AutoMLCandidate[] | undefined;
  NextToken?: string;
}
export interface ListCodeRepositoriesInput {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  NextToken?: string;
  SortBy?: CodeRepositorySortBy | string;
  SortOrder?: CodeRepositorySortOrder | string;
}
export interface ListCodeRepositoriesOutput {
  CodeRepositorySummaryList: CodeRepositorySummary[] | undefined;
  NextToken?: string;
}
export declare const ListCompilationJobsSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type ListCompilationJobsSortBy =
  (typeof ListCompilationJobsSortBy)[keyof typeof ListCompilationJobsSortBy];
export interface ListCompilationJobsRequest {
  NextToken?: string;
  MaxResults?: number;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  StatusEquals?: CompilationJobStatus | string;
  SortBy?: ListCompilationJobsSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ListCompilationJobsResponse {
  CompilationJobSummaries: CompilationJobSummary[] | undefined;
  NextToken?: string;
}
export declare const SortContextsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortContextsBy =
  (typeof SortContextsBy)[keyof typeof SortContextsBy];
export interface ListContextsRequest {
  SourceUri?: string;
  ContextType?: string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortContextsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListContextsResponse {
  ContextSummaries?: ContextSummary[];
  NextToken?: string;
}
export declare const MonitoringJobDefinitionSortKey: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type MonitoringJobDefinitionSortKey =
  (typeof MonitoringJobDefinitionSortKey)[keyof typeof MonitoringJobDefinitionSortKey];
export interface ListDataQualityJobDefinitionsRequest {
  EndpointName?: string;
  SortBy?: MonitoringJobDefinitionSortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
}
export interface MonitoringJobDefinitionSummary {
  MonitoringJobDefinitionName: string | undefined;
  MonitoringJobDefinitionArn: string | undefined;
  CreationTime: Date | undefined;
  EndpointName: string | undefined;
}
export interface ListDataQualityJobDefinitionsResponse {
  JobDefinitionSummaries: MonitoringJobDefinitionSummary[] | undefined;
  NextToken?: string;
}
export declare const ListDeviceFleetsSortBy: {
  readonly CreationTime: "CREATION_TIME";
  readonly LastModifiedTime: "LAST_MODIFIED_TIME";
  readonly Name: "NAME";
};
export type ListDeviceFleetsSortBy =
  (typeof ListDeviceFleetsSortBy)[keyof typeof ListDeviceFleetsSortBy];
export interface ListDeviceFleetsRequest {
  NextToken?: string;
  MaxResults?: number;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  SortBy?: ListDeviceFleetsSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ListDeviceFleetsResponse {
  DeviceFleetSummaries: DeviceFleetSummary[] | undefined;
  NextToken?: string;
}
export interface ListDevicesRequest {
  NextToken?: string;
  MaxResults?: number;
  LatestHeartbeatAfter?: Date;
  ModelName?: string;
  DeviceFleetName?: string;
}
export interface ListDevicesResponse {
  DeviceSummaries: DeviceSummary[] | undefined;
  NextToken?: string;
}
export interface ListDomainsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDomainsResponse {
  Domains?: DomainDetails[];
  NextToken?: string;
}
export declare const ListEdgeDeploymentPlansSortBy: {
  readonly CreationTime: "CREATION_TIME";
  readonly DeviceFleetName: "DEVICE_FLEET_NAME";
  readonly LastModifiedTime: "LAST_MODIFIED_TIME";
  readonly Name: "NAME";
};
export type ListEdgeDeploymentPlansSortBy =
  (typeof ListEdgeDeploymentPlansSortBy)[keyof typeof ListEdgeDeploymentPlansSortBy];
export interface ListEdgeDeploymentPlansRequest {
  NextToken?: string;
  MaxResults?: number;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  DeviceFleetNameContains?: string;
  SortBy?: ListEdgeDeploymentPlansSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ListEdgeDeploymentPlansResponse {
  EdgeDeploymentPlanSummaries: EdgeDeploymentPlanSummary[] | undefined;
  NextToken?: string;
}
export declare const ListEdgePackagingJobsSortBy: {
  readonly CreationTime: "CREATION_TIME";
  readonly EdgePackagingJobStatus: "STATUS";
  readonly LastModifiedTime: "LAST_MODIFIED_TIME";
  readonly ModelName: "MODEL_NAME";
  readonly Name: "NAME";
};
export type ListEdgePackagingJobsSortBy =
  (typeof ListEdgePackagingJobsSortBy)[keyof typeof ListEdgePackagingJobsSortBy];
export interface ListEdgePackagingJobsRequest {
  NextToken?: string;
  MaxResults?: number;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  ModelNameContains?: string;
  StatusEquals?: EdgePackagingJobStatus | string;
  SortBy?: ListEdgePackagingJobsSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ListEdgePackagingJobsResponse {
  EdgePackagingJobSummaries: EdgePackagingJobSummary[] | undefined;
  NextToken?: string;
}
export declare const OrderKey: {
  readonly Ascending: "Ascending";
  readonly Descending: "Descending";
};
export type OrderKey = (typeof OrderKey)[keyof typeof OrderKey];
export interface ListEndpointConfigsInput {
  SortBy?: EndpointConfigSortKey | string;
  SortOrder?: OrderKey | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
}
export interface ListEndpointConfigsOutput {
  EndpointConfigs: EndpointConfigSummary[] | undefined;
  NextToken?: string;
}
export interface ListEndpointsInput {
  SortBy?: EndpointSortKey | string;
  SortOrder?: OrderKey | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  StatusEquals?: EndpointStatus | string;
}
export interface ListEndpointsOutput {
  Endpoints: EndpointSummary[] | undefined;
  NextToken?: string;
}
export declare const SortExperimentsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortExperimentsBy =
  (typeof SortExperimentsBy)[keyof typeof SortExperimentsBy];
export interface ListExperimentsRequest {
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortExperimentsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListExperimentsResponse {
  ExperimentSummaries?: ExperimentSummary[];
  NextToken?: string;
}
export interface ListFeatureGroupsRequest {
  NameContains?: string;
  FeatureGroupStatusEquals?: FeatureGroupStatus | string;
  OfflineStoreStatusEquals?: OfflineStoreStatusValue | string;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  SortOrder?: FeatureGroupSortOrder | string;
  SortBy?: FeatureGroupSortBy | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListFeatureGroupsResponse {
  FeatureGroupSummaries: FeatureGroupSummary[] | undefined;
  NextToken: string | undefined;
}
export interface ListFlowDefinitionsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFlowDefinitionsResponse {
  FlowDefinitionSummaries: FlowDefinitionSummary[] | undefined;
  NextToken?: string;
}
export interface ListHubContentsRequest {
  HubName: string | undefined;
  HubContentType: HubContentType | string | undefined;
  NameContains?: string;
  MaxSchemaVersion?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  SortBy?: HubContentSortBy | string;
  SortOrder?: SortOrder | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListHubContentsResponse {
  HubContentSummaries: HubContentInfo[] | undefined;
  NextToken?: string;
}
export interface ListHubContentVersionsRequest {
  HubName: string | undefined;
  HubContentType: HubContentType | string | undefined;
  HubContentName: string | undefined;
  MinVersion?: string;
  MaxSchemaVersion?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  SortBy?: HubContentSortBy | string;
  SortOrder?: SortOrder | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListHubContentVersionsResponse {
  HubContentSummaries: HubContentInfo[] | undefined;
  NextToken?: string;
}
export interface ListHubsRequest {
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  SortBy?: HubSortBy | string;
  SortOrder?: SortOrder | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListHubsResponse {
  HubSummaries: HubInfo[] | undefined;
  NextToken?: string;
}
export interface ListHumanTaskUisRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListHumanTaskUisResponse {
  HumanTaskUiSummaries: HumanTaskUiSummary[] | undefined;
  NextToken?: string;
}
export interface ListHyperParameterTuningJobsRequest {
  NextToken?: string;
  MaxResults?: number;
  SortBy?: HyperParameterTuningJobSortByOptions | string;
  SortOrder?: SortOrder | string;
  NameContains?: string;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  StatusEquals?: HyperParameterTuningJobStatus | string;
}
export interface ListHyperParameterTuningJobsResponse {
  HyperParameterTuningJobSummaries:
    | HyperParameterTuningJobSummary[]
    | undefined;
  NextToken?: string;
}
export interface ListImagesRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  NextToken?: string;
  SortBy?: ImageSortBy | string;
  SortOrder?: ImageSortOrder | string;
}
export interface ListImagesResponse {
  Images?: Image[];
  NextToken?: string;
}
export interface ListImageVersionsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  ImageName: string | undefined;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  MaxResults?: number;
  NextToken?: string;
  SortBy?: ImageVersionSortBy | string;
  SortOrder?: ImageVersionSortOrder | string;
}
export interface ListImageVersionsResponse {
  ImageVersions?: ImageVersion[];
  NextToken?: string;
}
export declare const SortInferenceExperimentsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type SortInferenceExperimentsBy =
  (typeof SortInferenceExperimentsBy)[keyof typeof SortInferenceExperimentsBy];
export interface ListInferenceExperimentsRequest {
  NameContains?: string;
  Type?: InferenceExperimentType | string;
  StatusEquals?: InferenceExperimentStatus | string;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  SortBy?: SortInferenceExperimentsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListInferenceExperimentsResponse {
  InferenceExperiments?: InferenceExperimentSummary[];
  NextToken?: string;
}
export declare const ListInferenceRecommendationsJobsSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type ListInferenceRecommendationsJobsSortBy =
  (typeof ListInferenceRecommendationsJobsSortBy)[keyof typeof ListInferenceRecommendationsJobsSortBy];
export interface ListInferenceRecommendationsJobsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  StatusEquals?: RecommendationJobStatus | string;
  SortBy?: ListInferenceRecommendationsJobsSortBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListInferenceRecommendationsJobsResponse {
  InferenceRecommendationsJobs: InferenceRecommendationsJob[] | undefined;
  NextToken?: string;
}
export interface ListInferenceRecommendationsJobStepsRequest {
  JobName: string | undefined;
  Status?: RecommendationJobStatus | string;
  StepType?: RecommendationStepType | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListInferenceRecommendationsJobStepsResponse {
  Steps?: InferenceRecommendationsJobStep[];
  NextToken?: string;
}
export declare const SortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type SortBy = (typeof SortBy)[keyof typeof SortBy];
export interface ListLabelingJobsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  MaxResults?: number;
  NextToken?: string;
  NameContains?: string;
  SortBy?: SortBy | string;
  SortOrder?: SortOrder | string;
  StatusEquals?: LabelingJobStatus | string;
}
export interface ListLabelingJobsResponse {
  LabelingJobSummaryList?: LabelingJobSummary[];
  NextToken?: string;
}
export declare const ListLabelingJobsForWorkteamSortByOptions: {
  readonly CREATION_TIME: "CreationTime";
};
export type ListLabelingJobsForWorkteamSortByOptions =
  (typeof ListLabelingJobsForWorkteamSortByOptions)[keyof typeof ListLabelingJobsForWorkteamSortByOptions];
export interface ListLabelingJobsForWorkteamRequest {
  WorkteamArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  JobReferenceCodeContains?: string;
  SortBy?: ListLabelingJobsForWorkteamSortByOptions | string;
  SortOrder?: SortOrder | string;
}
export interface ListLabelingJobsForWorkteamResponse {
  LabelingJobSummaryList: LabelingJobForWorkteamSummary[] | undefined;
  NextToken?: string;
}
export declare const SortLineageGroupsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortLineageGroupsBy =
  (typeof SortLineageGroupsBy)[keyof typeof SortLineageGroupsBy];
export interface ListLineageGroupsRequest {
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortLineageGroupsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListLineageGroupsResponse {
  LineageGroupSummaries?: LineageGroupSummary[];
  NextToken?: string;
}
export interface ListModelBiasJobDefinitionsRequest {
  EndpointName?: string;
  SortBy?: MonitoringJobDefinitionSortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
}
export interface ListModelBiasJobDefinitionsResponse {
  JobDefinitionSummaries: MonitoringJobDefinitionSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelCardExportJobSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type ModelCardExportJobSortBy =
  (typeof ModelCardExportJobSortBy)[keyof typeof ModelCardExportJobSortBy];
export declare const ModelCardExportJobSortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type ModelCardExportJobSortOrder =
  (typeof ModelCardExportJobSortOrder)[keyof typeof ModelCardExportJobSortOrder];
export interface ListModelCardExportJobsRequest {
  ModelCardName: string | undefined;
  ModelCardVersion?: number;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  ModelCardExportJobNameContains?: string;
  StatusEquals?: ModelCardExportJobStatus | string;
  SortBy?: ModelCardExportJobSortBy | string;
  SortOrder?: ModelCardExportJobSortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ModelCardExportJobSummary {
  ModelCardExportJobName: string | undefined;
  ModelCardExportJobArn: string | undefined;
  Status: ModelCardExportJobStatus | string | undefined;
  ModelCardName: string | undefined;
  ModelCardVersion: number | undefined;
  CreatedAt: Date | undefined;
  LastModifiedAt: Date | undefined;
}
export interface ListModelCardExportJobsResponse {
  ModelCardExportJobSummaries: ModelCardExportJobSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelCardSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type ModelCardSortBy =
  (typeof ModelCardSortBy)[keyof typeof ModelCardSortBy];
export declare const ModelCardSortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type ModelCardSortOrder =
  (typeof ModelCardSortOrder)[keyof typeof ModelCardSortOrder];
export interface ListModelCardsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  ModelCardStatus?: ModelCardStatus | string;
  NextToken?: string;
  SortBy?: ModelCardSortBy | string;
  SortOrder?: ModelCardSortOrder | string;
}
export interface ModelCardSummary {
  ModelCardName: string | undefined;
  ModelCardArn: string | undefined;
  ModelCardStatus: ModelCardStatus | string | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime?: Date;
}
export interface ListModelCardsResponse {
  ModelCardSummaries: ModelCardSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelCardVersionSortBy: {
  readonly VERSION: "Version";
};
export type ModelCardVersionSortBy =
  (typeof ModelCardVersionSortBy)[keyof typeof ModelCardVersionSortBy];
export interface ListModelCardVersionsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  MaxResults?: number;
  ModelCardName: string | undefined;
  ModelCardStatus?: ModelCardStatus | string;
  NextToken?: string;
  SortBy?: ModelCardVersionSortBy | string;
  SortOrder?: ModelCardSortOrder | string;
}
export interface ModelCardVersionSummary {
  ModelCardName: string | undefined;
  ModelCardArn: string | undefined;
  ModelCardStatus: ModelCardStatus | string | undefined;
  ModelCardVersion: number | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime?: Date;
}
export interface ListModelCardVersionsResponse {
  ModelCardVersionSummaryList: ModelCardVersionSummary[] | undefined;
  NextToken?: string;
}
export interface ListModelExplainabilityJobDefinitionsRequest {
  EndpointName?: string;
  SortBy?: MonitoringJobDefinitionSortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
}
export interface ListModelExplainabilityJobDefinitionsResponse {
  JobDefinitionSummaries: MonitoringJobDefinitionSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelMetadataFilterType: {
  readonly DOMAIN: "Domain";
  readonly FRAMEWORK: "Framework";
  readonly FRAMEWORKVERSION: "FrameworkVersion";
  readonly TASK: "Task";
};
export type ModelMetadataFilterType =
  (typeof ModelMetadataFilterType)[keyof typeof ModelMetadataFilterType];
export interface ModelMetadataFilter {
  Name: ModelMetadataFilterType | string | undefined;
  Value: string | undefined;
}
export interface ModelMetadataSearchExpression {
  Filters?: ModelMetadataFilter[];
}
export interface ListModelMetadataRequest {
  SearchExpression?: ModelMetadataSearchExpression;
  NextToken?: string;
  MaxResults?: number;
}
export interface ModelMetadataSummary {
  Domain: string | undefined;
  Framework: string | undefined;
  Task: string | undefined;
  Model: string | undefined;
  FrameworkVersion: string | undefined;
}
export interface ListModelMetadataResponse {
  ModelMetadataSummaries: ModelMetadataSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelPackageGroupSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type ModelPackageGroupSortBy =
  (typeof ModelPackageGroupSortBy)[keyof typeof ModelPackageGroupSortBy];
export interface ListModelPackageGroupsInput {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  NextToken?: string;
  SortBy?: ModelPackageGroupSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ModelPackageGroupSummary {
  ModelPackageGroupName: string | undefined;
  ModelPackageGroupArn: string | undefined;
  ModelPackageGroupDescription?: string;
  CreationTime: Date | undefined;
  ModelPackageGroupStatus: ModelPackageGroupStatus | string | undefined;
}
export interface ListModelPackageGroupsOutput {
  ModelPackageGroupSummaryList: ModelPackageGroupSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelPackageType: {
  readonly BOTH: "Both";
  readonly UNVERSIONED: "Unversioned";
  readonly VERSIONED: "Versioned";
};
export type ModelPackageType =
  (typeof ModelPackageType)[keyof typeof ModelPackageType];
export declare const ModelPackageSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type ModelPackageSortBy =
  (typeof ModelPackageSortBy)[keyof typeof ModelPackageSortBy];
export interface ListModelPackagesInput {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  ModelApprovalStatus?: ModelApprovalStatus | string;
  ModelPackageGroupName?: string;
  ModelPackageType?: ModelPackageType | string;
  NextToken?: string;
  SortBy?: ModelPackageSortBy | string;
  SortOrder?: SortOrder | string;
}
export interface ModelPackageSummary {
  ModelPackageName: string | undefined;
  ModelPackageGroupName?: string;
  ModelPackageVersion?: number;
  ModelPackageArn: string | undefined;
  ModelPackageDescription?: string;
  CreationTime: Date | undefined;
  ModelPackageStatus: ModelPackageStatus | string | undefined;
  ModelApprovalStatus?: ModelApprovalStatus | string;
}
export interface ListModelPackagesOutput {
  ModelPackageSummaryList: ModelPackageSummary[] | undefined;
  NextToken?: string;
}
export interface ListModelQualityJobDefinitionsRequest {
  EndpointName?: string;
  SortBy?: MonitoringJobDefinitionSortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
}
export interface ListModelQualityJobDefinitionsResponse {
  JobDefinitionSummaries: MonitoringJobDefinitionSummary[] | undefined;
  NextToken?: string;
}
export declare const ModelSortKey: {
  readonly CreationTime: "CreationTime";
  readonly Name: "Name";
};
export type ModelSortKey = (typeof ModelSortKey)[keyof typeof ModelSortKey];
export interface ListModelsInput {
  SortBy?: ModelSortKey | string;
  SortOrder?: OrderKey | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
}
export interface ModelSummary {
  ModelName: string | undefined;
  ModelArn: string | undefined;
  CreationTime: Date | undefined;
}
export interface ListModelsOutput {
  Models: ModelSummary[] | undefined;
  NextToken?: string;
}
export declare const MonitoringAlertHistorySortKey: {
  readonly CreationTime: "CreationTime";
  readonly Status: "Status";
};
export type MonitoringAlertHistorySortKey =
  (typeof MonitoringAlertHistorySortKey)[keyof typeof MonitoringAlertHistorySortKey];
export declare const MonitoringAlertStatus: {
  readonly IN_ALERT: "InAlert";
  readonly OK: "OK";
};
export type MonitoringAlertStatus =
  (typeof MonitoringAlertStatus)[keyof typeof MonitoringAlertStatus];
export interface ListMonitoringAlertHistoryRequest {
  MonitoringScheduleName?: string;
  MonitoringAlertName?: string;
  SortBy?: MonitoringAlertHistorySortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  StatusEquals?: MonitoringAlertStatus | string;
}
export interface MonitoringAlertHistorySummary {
  MonitoringScheduleName: string | undefined;
  MonitoringAlertName: string | undefined;
  CreationTime: Date | undefined;
  AlertStatus: MonitoringAlertStatus | string | undefined;
}
export interface ListMonitoringAlertHistoryResponse {
  MonitoringAlertHistory?: MonitoringAlertHistorySummary[];
  NextToken?: string;
}
export interface ListMonitoringAlertsRequest {
  MonitoringScheduleName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ModelDashboardIndicatorAction {
  Enabled?: boolean;
}
export interface MonitoringAlertActions {
  ModelDashboardIndicator?: ModelDashboardIndicatorAction;
}
export interface MonitoringAlertSummary {
  MonitoringAlertName: string | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  AlertStatus: MonitoringAlertStatus | string | undefined;
  DatapointsToAlert: number | undefined;
  EvaluationPeriod: number | undefined;
  Actions: MonitoringAlertActions | undefined;
}
export interface ListMonitoringAlertsResponse {
  MonitoringAlertSummaries?: MonitoringAlertSummary[];
  NextToken?: string;
}
export declare const MonitoringExecutionSortKey: {
  readonly CREATION_TIME: "CreationTime";
  readonly SCHEDULED_TIME: "ScheduledTime";
  readonly STATUS: "Status";
};
export type MonitoringExecutionSortKey =
  (typeof MonitoringExecutionSortKey)[keyof typeof MonitoringExecutionSortKey];
export interface ListMonitoringExecutionsRequest {
  MonitoringScheduleName?: string;
  EndpointName?: string;
  SortBy?: MonitoringExecutionSortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  ScheduledTimeBefore?: Date;
  ScheduledTimeAfter?: Date;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  StatusEquals?: ExecutionStatus | string;
  MonitoringJobDefinitionName?: string;
  MonitoringTypeEquals?: MonitoringType | string;
}
export interface ListMonitoringExecutionsResponse {
  MonitoringExecutionSummaries: MonitoringExecutionSummary[] | undefined;
  NextToken?: string;
}
export declare const MonitoringScheduleSortKey: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type MonitoringScheduleSortKey =
  (typeof MonitoringScheduleSortKey)[keyof typeof MonitoringScheduleSortKey];
export interface ListMonitoringSchedulesRequest {
  EndpointName?: string;
  SortBy?: MonitoringScheduleSortKey | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  StatusEquals?: ScheduleStatus | string;
  MonitoringJobDefinitionName?: string;
  MonitoringTypeEquals?: MonitoringType | string;
}
export interface MonitoringScheduleSummary {
  MonitoringScheduleName: string | undefined;
  MonitoringScheduleArn: string | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  MonitoringScheduleStatus: ScheduleStatus | string | undefined;
  EndpointName?: string;
  MonitoringJobDefinitionName?: string;
  MonitoringType?: MonitoringType | string;
}
export interface ListMonitoringSchedulesResponse {
  MonitoringScheduleSummaries: MonitoringScheduleSummary[] | undefined;
  NextToken?: string;
}
export declare const NotebookInstanceLifecycleConfigSortKey: {
  readonly CREATION_TIME: "CreationTime";
  readonly LAST_MODIFIED_TIME: "LastModifiedTime";
  readonly NAME: "Name";
};
export type NotebookInstanceLifecycleConfigSortKey =
  (typeof NotebookInstanceLifecycleConfigSortKey)[keyof typeof NotebookInstanceLifecycleConfigSortKey];
export declare const NotebookInstanceLifecycleConfigSortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type NotebookInstanceLifecycleConfigSortOrder =
  (typeof NotebookInstanceLifecycleConfigSortOrder)[keyof typeof NotebookInstanceLifecycleConfigSortOrder];
export interface ListNotebookInstanceLifecycleConfigsInput {
  NextToken?: string;
  MaxResults?: number;
  SortBy?: NotebookInstanceLifecycleConfigSortKey | string;
  SortOrder?: NotebookInstanceLifecycleConfigSortOrder | string;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
}
export interface NotebookInstanceLifecycleConfigSummary {
  NotebookInstanceLifecycleConfigName: string | undefined;
  NotebookInstanceLifecycleConfigArn: string | undefined;
  CreationTime?: Date;
  LastModifiedTime?: Date;
}
export interface ListNotebookInstanceLifecycleConfigsOutput {
  NextToken?: string;
  NotebookInstanceLifecycleConfigs?: NotebookInstanceLifecycleConfigSummary[];
}
export declare const NotebookInstanceSortKey: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type NotebookInstanceSortKey =
  (typeof NotebookInstanceSortKey)[keyof typeof NotebookInstanceSortKey];
export declare const NotebookInstanceSortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type NotebookInstanceSortOrder =
  (typeof NotebookInstanceSortOrder)[keyof typeof NotebookInstanceSortOrder];
export interface ListNotebookInstancesInput {
  NextToken?: string;
  MaxResults?: number;
  SortBy?: NotebookInstanceSortKey | string;
  SortOrder?: NotebookInstanceSortOrder | string;
  NameContains?: string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  StatusEquals?: NotebookInstanceStatus | string;
  NotebookInstanceLifecycleConfigNameContains?: string;
  DefaultCodeRepositoryContains?: string;
  AdditionalCodeRepositoryEquals?: string;
}
export interface NotebookInstanceSummary {
  NotebookInstanceName: string | undefined;
  NotebookInstanceArn: string | undefined;
  NotebookInstanceStatus?: NotebookInstanceStatus | string;
  Url?: string;
  InstanceType?: _InstanceType | string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  NotebookInstanceLifecycleConfigName?: string;
  DefaultCodeRepository?: string;
  AdditionalCodeRepositories?: string[];
}
export interface ListNotebookInstancesOutput {
  NextToken?: string;
  NotebookInstances?: NotebookInstanceSummary[];
}
export declare const SortPipelineExecutionsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly PIPELINE_EXECUTION_ARN: "PipelineExecutionArn";
};
export type SortPipelineExecutionsBy =
  (typeof SortPipelineExecutionsBy)[keyof typeof SortPipelineExecutionsBy];
export interface ListPipelineExecutionsRequest {
  PipelineName: string | undefined;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortPipelineExecutionsBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface PipelineExecutionSummary {
  PipelineExecutionArn?: string;
  StartTime?: Date;
  PipelineExecutionStatus?: PipelineExecutionStatus | string;
  PipelineExecutionDescription?: string;
  PipelineExecutionDisplayName?: string;
  PipelineExecutionFailureReason?: string;
}
export interface ListPipelineExecutionsResponse {
  PipelineExecutionSummaries?: PipelineExecutionSummary[];
  NextToken?: string;
}
export interface ListPipelineExecutionStepsRequest {
  PipelineExecutionArn?: string;
  NextToken?: string;
  MaxResults?: number;
  SortOrder?: SortOrder | string;
}
export interface ModelStepMetadata {
  Arn?: string;
}
export interface ProcessingJobStepMetadata {
  Arn?: string;
}
export interface QualityCheckStepMetadata {
  CheckType?: string;
  BaselineUsedForDriftCheckStatistics?: string;
  BaselineUsedForDriftCheckConstraints?: string;
  CalculatedBaselineStatistics?: string;
  CalculatedBaselineConstraints?: string;
  ModelPackageGroupName?: string;
  ViolationReport?: string;
  CheckJobArn?: string;
  SkipCheck?: boolean;
  RegisterNewBaseline?: boolean;
}
export interface RegisterModelStepMetadata {
  Arn?: string;
}
export interface TrainingJobStepMetadata {
  Arn?: string;
}
export interface TransformJobStepMetadata {
  Arn?: string;
}
export interface TuningJobStepMetaData {
  Arn?: string;
}
export interface PipelineExecutionStepMetadata {
  TrainingJob?: TrainingJobStepMetadata;
  ProcessingJob?: ProcessingJobStepMetadata;
  TransformJob?: TransformJobStepMetadata;
  TuningJob?: TuningJobStepMetaData;
  Model?: ModelStepMetadata;
  RegisterModel?: RegisterModelStepMetadata;
  Condition?: ConditionStepMetadata;
  Callback?: CallbackStepMetadata;
  Lambda?: LambdaStepMetadata;
  QualityCheck?: QualityCheckStepMetadata;
  ClarifyCheck?: ClarifyCheckStepMetadata;
  EMR?: EMRStepMetadata;
  Fail?: FailStepMetadata;
  AutoMLJob?: AutoMLJobStepMetadata;
}
export declare const StepStatus: {
  readonly EXECUTING: "Executing";
  readonly FAILED: "Failed";
  readonly STARTING: "Starting";
  readonly STOPPED: "Stopped";
  readonly STOPPING: "Stopping";
  readonly SUCCEEDED: "Succeeded";
};
export type StepStatus = (typeof StepStatus)[keyof typeof StepStatus];
export interface PipelineExecutionStep {
  StepName?: string;
  StepDisplayName?: string;
  StepDescription?: string;
  StartTime?: Date;
  EndTime?: Date;
  StepStatus?: StepStatus | string;
  CacheHitResult?: CacheHitResult;
  AttemptCount?: number;
  FailureReason?: string;
  Metadata?: PipelineExecutionStepMetadata;
}
export interface ListPipelineExecutionStepsResponse {
  PipelineExecutionSteps?: PipelineExecutionStep[];
  NextToken?: string;
}
export interface ListPipelineParametersForExecutionRequest {
  PipelineExecutionArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface Parameter {
  Name: string | undefined;
  Value: string | undefined;
}
export interface ListPipelineParametersForExecutionResponse {
  PipelineParameters?: Parameter[];
  NextToken?: string;
}
export declare const SortPipelinesBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortPipelinesBy =
  (typeof SortPipelinesBy)[keyof typeof SortPipelinesBy];
export interface ListPipelinesRequest {
  PipelineNamePrefix?: string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortPipelinesBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface PipelineSummary {
  PipelineArn?: string;
  PipelineName?: string;
  PipelineDisplayName?: string;
  PipelineDescription?: string;
  RoleArn?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  LastExecutionTime?: Date;
}
export interface ListPipelinesResponse {
  PipelineSummaries?: PipelineSummary[];
  NextToken?: string;
}
export interface ListProcessingJobsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  StatusEquals?: ProcessingJobStatus | string;
  SortBy?: SortBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ProcessingJobSummary {
  ProcessingJobName: string | undefined;
  ProcessingJobArn: string | undefined;
  CreationTime: Date | undefined;
  ProcessingEndTime?: Date;
  LastModifiedTime?: Date;
  ProcessingJobStatus: ProcessingJobStatus | string | undefined;
  FailureReason?: string;
  ExitMessage?: string;
}
export interface ListProcessingJobsResponse {
  ProcessingJobSummaries: ProcessingJobSummary[] | undefined;
  NextToken?: string;
}
export declare const ProjectSortBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type ProjectSortBy = (typeof ProjectSortBy)[keyof typeof ProjectSortBy];
export declare const ProjectSortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type ProjectSortOrder =
  (typeof ProjectSortOrder)[keyof typeof ProjectSortOrder];
export interface ListProjectsInput {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  MaxResults?: number;
  NameContains?: string;
  NextToken?: string;
  SortBy?: ProjectSortBy | string;
  SortOrder?: ProjectSortOrder | string;
}
export interface ProjectSummary {
  ProjectName: string | undefined;
  ProjectDescription?: string;
  ProjectArn: string | undefined;
  ProjectId: string | undefined;
  CreationTime: Date | undefined;
  ProjectStatus: ProjectStatus | string | undefined;
}
export interface ListProjectsOutput {
  ProjectSummaryList: ProjectSummary[] | undefined;
  NextToken?: string;
}
export declare const SpaceSortKey: {
  readonly CreationTime: "CreationTime";
  readonly LastModifiedTime: "LastModifiedTime";
};
export type SpaceSortKey = (typeof SpaceSortKey)[keyof typeof SpaceSortKey];
export interface ListSpacesRequest {
  NextToken?: string;
  MaxResults?: number;
  SortOrder?: SortOrder | string;
  SortBy?: SpaceSortKey | string;
  DomainIdEquals?: string;
  SpaceNameContains?: string;
}
export interface SpaceDetails {
  DomainId?: string;
  SpaceName?: string;
  Status?: SpaceStatus | string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
}
export interface ListSpacesResponse {
  Spaces?: SpaceDetails[];
  NextToken?: string;
}
export interface ListStageDevicesRequest {
  NextToken?: string;
  MaxResults?: number;
  EdgeDeploymentPlanName: string | undefined;
  ExcludeDevicesDeployedInOtherStage?: boolean;
  StageName: string | undefined;
}
export interface ListStageDevicesResponse {
  DeviceDeploymentSummaries: DeviceDeploymentSummary[] | undefined;
  NextToken?: string;
}
export declare const StudioLifecycleConfigSortKey: {
  readonly CreationTime: "CreationTime";
  readonly LastModifiedTime: "LastModifiedTime";
  readonly Name: "Name";
};
export type StudioLifecycleConfigSortKey =
  (typeof StudioLifecycleConfigSortKey)[keyof typeof StudioLifecycleConfigSortKey];
export interface ListStudioLifecycleConfigsRequest {
  MaxResults?: number;
  NextToken?: string;
  NameContains?: string;
  AppTypeEquals?: StudioLifecycleConfigAppType | string;
  CreationTimeBefore?: Date;
  CreationTimeAfter?: Date;
  ModifiedTimeBefore?: Date;
  ModifiedTimeAfter?: Date;
  SortBy?: StudioLifecycleConfigSortKey | string;
  SortOrder?: SortOrder | string;
}
export interface StudioLifecycleConfigDetails {
  StudioLifecycleConfigArn?: string;
  StudioLifecycleConfigName?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  StudioLifecycleConfigAppType?: StudioLifecycleConfigAppType | string;
}
export interface ListStudioLifecycleConfigsResponse {
  NextToken?: string;
  StudioLifecycleConfigs?: StudioLifecycleConfigDetails[];
}
export interface ListSubscribedWorkteamsRequest {
  NameContains?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListSubscribedWorkteamsResponse {
  SubscribedWorkteams: SubscribedWorkteam[] | undefined;
  NextToken?: string;
}
export interface ListTagsInput {
  ResourceArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListTagsOutput {
  Tags?: Tag[];
  NextToken?: string;
}
export interface ListTrainingJobsRequest {
  NextToken?: string;
  MaxResults?: number;
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  StatusEquals?: TrainingJobStatus | string;
  SortBy?: SortBy | string;
  SortOrder?: SortOrder | string;
  WarmPoolStatusEquals?: WarmPoolResourceStatus | string;
}
export interface TrainingJobSummary {
  TrainingJobName: string | undefined;
  TrainingJobArn: string | undefined;
  CreationTime: Date | undefined;
  TrainingEndTime?: Date;
  LastModifiedTime?: Date;
  TrainingJobStatus: TrainingJobStatus | string | undefined;
  WarmPoolStatus?: WarmPoolStatus;
}
export interface ListTrainingJobsResponse {
  TrainingJobSummaries: TrainingJobSummary[] | undefined;
  NextToken?: string;
}
export declare const TrainingJobSortByOptions: {
  readonly CreationTime: "CreationTime";
  readonly FinalObjectiveMetricValue: "FinalObjectiveMetricValue";
  readonly Name: "Name";
  readonly Status: "Status";
};
export type TrainingJobSortByOptions =
  (typeof TrainingJobSortByOptions)[keyof typeof TrainingJobSortByOptions];
export interface ListTrainingJobsForHyperParameterTuningJobRequest {
  HyperParameterTuningJobName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  StatusEquals?: TrainingJobStatus | string;
  SortBy?: TrainingJobSortByOptions | string;
  SortOrder?: SortOrder | string;
}
export interface ListTrainingJobsForHyperParameterTuningJobResponse {
  TrainingJobSummaries: HyperParameterTrainingJobSummary[] | undefined;
  NextToken?: string;
}
export interface ListTransformJobsRequest {
  CreationTimeAfter?: Date;
  CreationTimeBefore?: Date;
  LastModifiedTimeAfter?: Date;
  LastModifiedTimeBefore?: Date;
  NameContains?: string;
  StatusEquals?: TransformJobStatus | string;
  SortBy?: SortBy | string;
  SortOrder?: SortOrder | string;
  NextToken?: string;
  MaxResults?: number;
}
export interface TransformJobSummary {
  TransformJobName: string | undefined;
  TransformJobArn: string | undefined;
  CreationTime: Date | undefined;
  TransformEndTime?: Date;
  LastModifiedTime?: Date;
  TransformJobStatus: TransformJobStatus | string | undefined;
  FailureReason?: string;
}
export interface ListTransformJobsResponse {
  TransformJobSummaries: TransformJobSummary[] | undefined;
  NextToken?: string;
}
export declare const SortTrialComponentsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortTrialComponentsBy =
  (typeof SortTrialComponentsBy)[keyof typeof SortTrialComponentsBy];
export interface ListTrialComponentsRequest {
  ExperimentName?: string;
  TrialName?: string;
  SourceArn?: string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortTrialComponentsBy | string;
  SortOrder?: SortOrder | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface TrialComponentSummary {
  TrialComponentName?: string;
  TrialComponentArn?: string;
  DisplayName?: string;
  TrialComponentSource?: TrialComponentSource;
  Status?: TrialComponentStatus;
  StartTime?: Date;
  EndTime?: Date;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
}
export interface ListTrialComponentsResponse {
  TrialComponentSummaries?: TrialComponentSummary[];
  NextToken?: string;
}
export declare const SortTrialsBy: {
  readonly CREATION_TIME: "CreationTime";
  readonly NAME: "Name";
};
export type SortTrialsBy = (typeof SortTrialsBy)[keyof typeof SortTrialsBy];
export interface ListTrialsRequest {
  ExperimentName?: string;
  TrialComponentName?: string;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  SortBy?: SortTrialsBy | string;
  SortOrder?: SortOrder | string;
  MaxResults?: number;
  NextToken?: string;
}
export interface TrialSummary {
  TrialArn?: string;
  TrialName?: string;
  DisplayName?: string;
  TrialSource?: TrialSource;
  CreationTime?: Date;
  LastModifiedTime?: Date;
}
export interface ListTrialsResponse {
  TrialSummaries?: TrialSummary[];
  NextToken?: string;
}
export declare const UserProfileSortKey: {
  readonly CreationTime: "CreationTime";
  readonly LastModifiedTime: "LastModifiedTime";
};
export type UserProfileSortKey =
  (typeof UserProfileSortKey)[keyof typeof UserProfileSortKey];
export interface ListUserProfilesRequest {
  NextToken?: string;
  MaxResults?: number;
  SortOrder?: SortOrder | string;
  SortBy?: UserProfileSortKey | string;
  DomainIdEquals?: string;
  UserProfileNameContains?: string;
}
export interface UserProfileDetails {
  DomainId?: string;
  UserProfileName?: string;
  Status?: UserProfileStatus | string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
}
export interface ListUserProfilesResponse {
  UserProfiles?: UserProfileDetails[];
  NextToken?: string;
}
export declare const ListWorkforcesSortByOptions: {
  readonly CreateDate: "CreateDate";
  readonly Name: "Name";
};
export type ListWorkforcesSortByOptions =
  (typeof ListWorkforcesSortByOptions)[keyof typeof ListWorkforcesSortByOptions];
export interface ListWorkforcesRequest {
  SortBy?: ListWorkforcesSortByOptions | string;
  SortOrder?: SortOrder | string;
  NameContains?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListWorkforcesResponse {
  Workforces: Workforce[] | undefined;
  NextToken?: string;
}
export declare const ListWorkteamsSortByOptions: {
  readonly CreateDate: "CreateDate";
  readonly Name: "Name";
};
export type ListWorkteamsSortByOptions =
  (typeof ListWorkteamsSortByOptions)[keyof typeof ListWorkteamsSortByOptions];
export interface ListWorkteamsRequest {
  SortBy?: ListWorkteamsSortByOptions | string;
  SortOrder?: SortOrder | string;
  NameContains?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListWorkteamsResponse {
  Workteams: Workteam[] | undefined;
  NextToken?: string;
}
export interface Model {
  ModelName?: string;
  PrimaryContainer?: ContainerDefinition;
  Containers?: ContainerDefinition[];
  InferenceExecutionConfig?: InferenceExecutionConfig;
  ExecutionRoleArn?: string;
  VpcConfig?: VpcConfig;
  CreationTime?: Date;
  ModelArn?: string;
  EnableNetworkIsolation?: boolean;
  Tags?: Tag[];
}
export interface ModelCard {
  ModelCardArn?: string;
  ModelCardName?: string;
  ModelCardVersion?: number;
  Content?: string;
  ModelCardStatus?: ModelCardStatus | string;
  SecurityConfig?: ModelCardSecurityConfig;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  Tags?: Tag[];
  ModelId?: string;
  RiskRating?: string;
}
export interface ModelDashboardEndpoint {
  EndpointName: string | undefined;
  EndpointArn: string | undefined;
  CreationTime: Date | undefined;
  LastModifiedTime: Date | undefined;
  EndpointStatus: EndpointStatus | string | undefined;
}
export interface TransformJob {
  TransformJobName?: string;
  TransformJobArn?: string;
  TransformJobStatus?: TransformJobStatus | string;
  FailureReason?: string;
  ModelName?: string;
  MaxConcurrentTransforms?: number;
  ModelClientConfig?: ModelClientConfig;
  MaxPayloadInMB?: number;
  BatchStrategy?: BatchStrategy | string;
  Environment?: Record<string, string>;
  TransformInput?: TransformInput;
  TransformOutput?: TransformOutput;
  TransformResources?: TransformResources;
  CreationTime?: Date;
  TransformStartTime?: Date;
  TransformEndTime?: Date;
  LabelingJobArn?: string;
  AutoMLJobArn?: string;
  DataProcessing?: DataProcessing;
  ExperimentConfig?: ExperimentConfig;
  Tags?: Tag[];
}
export interface ModelDashboardModelCard {
  ModelCardArn?: string;
  ModelCardName?: string;
  ModelCardVersion?: number;
  ModelCardStatus?: ModelCardStatus | string;
  SecurityConfig?: ModelCardSecurityConfig;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  Tags?: Tag[];
  ModelId?: string;
  RiskRating?: string;
}
export interface ModelDashboardMonitoringSchedule {
  MonitoringScheduleArn?: string;
  MonitoringScheduleName?: string;
  MonitoringScheduleStatus?: ScheduleStatus | string;
  MonitoringType?: MonitoringType | string;
  FailureReason?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  MonitoringScheduleConfig?: MonitoringScheduleConfig;
  EndpointName?: string;
  MonitoringAlertSummaries?: MonitoringAlertSummary[];
  LastMonitoringExecutionSummary?: MonitoringExecutionSummary;
}
export interface ModelDashboardModel {
  Model?: Model;
  Endpoints?: ModelDashboardEndpoint[];
  LastBatchTransformJob?: TransformJob;
  MonitoringSchedules?: ModelDashboardMonitoringSchedule[];
  ModelCard?: ModelDashboardModelCard;
}
export interface ModelPackage {
  ModelPackageName?: string;
  ModelPackageGroupName?: string;
  ModelPackageVersion?: number;
  ModelPackageArn?: string;
  ModelPackageDescription?: string;
  CreationTime?: Date;
  InferenceSpecification?: InferenceSpecification;
  SourceAlgorithmSpecification?: SourceAlgorithmSpecification;
  ValidationSpecification?: ModelPackageValidationSpecification;
  ModelPackageStatus?: ModelPackageStatus | string;
  ModelPackageStatusDetails?: ModelPackageStatusDetails;
  CertifyForMarketplace?: boolean;
  ModelApprovalStatus?: ModelApprovalStatus | string;
  CreatedBy?: UserContext;
  MetadataProperties?: MetadataProperties;
  ModelMetrics?: ModelMetrics;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  ApprovalDescription?: string;
  Domain?: string;
  Task?: string;
  SamplePayloadUrl?: string;
  AdditionalInferenceSpecifications?: AdditionalInferenceSpecificationDefinition[];
  Tags?: Tag[];
  CustomerMetadataProperties?: Record<string, string>;
  DriftCheckBaselines?: DriftCheckBaselines;
}
export interface ModelPackageGroup {
  ModelPackageGroupName?: string;
  ModelPackageGroupArn?: string;
  ModelPackageGroupDescription?: string;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  ModelPackageGroupStatus?: ModelPackageGroupStatus | string;
  Tags?: Tag[];
}
export declare const ModelVariantAction: {
  readonly PROMOTE: "Promote";
  readonly REMOVE: "Remove";
  readonly RETAIN: "Retain";
};
export type ModelVariantAction =
  (typeof ModelVariantAction)[keyof typeof ModelVariantAction];
export interface NestedFilters {
  NestedPropertyName: string | undefined;
  Filters: Filter[] | undefined;
}
export interface Parent {
  TrialName?: string;
  ExperimentName?: string;
}
export interface Pipeline {
  PipelineArn?: string;
  PipelineName?: string;
  PipelineDisplayName?: string;
  PipelineDescription?: string;
  RoleArn?: string;
  PipelineStatus?: PipelineStatus | string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  LastRunTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedBy?: UserContext;
  ParallelismConfiguration?: ParallelismConfiguration;
  Tags?: Tag[];
}
export interface PipelineExecution {
  PipelineArn?: string;
  PipelineExecutionArn?: string;
  PipelineExecutionDisplayName?: string;
  PipelineExecutionStatus?: PipelineExecutionStatus | string;
  PipelineExecutionDescription?: string;
  PipelineExperimentConfig?: PipelineExperimentConfig;
  FailureReason?: string;
  CreationTime?: Date;
  LastModifiedTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedBy?: UserContext;
  ParallelismConfiguration?: ParallelismConfiguration;
  PipelineParameters?: Parameter[];
}
export interface ProcessingJob {
  ProcessingInputs?: ProcessingInput[];
  ProcessingOutputConfig?: ProcessingOutputConfig;
  ProcessingJobName?: string;
  ProcessingResources?: ProcessingResources;
  StoppingCondition?: ProcessingStoppingCondition;
  AppSpecification?: AppSpecification;
  Environment?: Record<string, string>;
  NetworkConfig?: NetworkConfig;
  RoleArn?: string;
  ExperimentConfig?: ExperimentConfig;
  ProcessingJobArn?: string;
  ProcessingJobStatus?: ProcessingJobStatus | string;
  ExitMessage?: string;
  FailureReason?: string;
  ProcessingEndTime?: Date;
  ProcessingStartTime?: Date;
  LastModifiedTime?: Date;
  CreationTime?: Date;
  MonitoringScheduleArn?: string;
  AutoMLJobArn?: string;
  TrainingJobArn?: string;
  Tags?: Tag[];
}
export interface ProfilerConfigForUpdate {
  S3OutputPath?: string;
  ProfilingIntervalInMilliseconds?: number;
  ProfilingParameters?: Record<string, string>;
  DisableProfiler?: boolean;
}
export interface Project {
  ProjectArn?: string;
  ProjectName?: string;
  ProjectId?: string;
  ProjectDescription?: string;
  ServiceCatalogProvisioningDetails?: ServiceCatalogProvisioningDetails;
  ServiceCatalogProvisionedProductDetails?: ServiceCatalogProvisionedProductDetails;
  ProjectStatus?: ProjectStatus | string;
  CreatedBy?: UserContext;
  CreationTime?: Date;
  Tags?: Tag[];
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
}
export interface PutModelPackageGroupPolicyInput {
  ModelPackageGroupName: string | undefined;
  ResourcePolicy: string | undefined;
}
export interface PutModelPackageGroupPolicyOutput {
  ModelPackageGroupArn: string | undefined;
}
export interface QueryFilters {
  Types?: string[];
  LineageTypes?: (LineageType | string)[];
  CreatedBefore?: Date;
  CreatedAfter?: Date;
  ModifiedBefore?: Date;
  ModifiedAfter?: Date;
  Properties?: Record<string, string>;
}
export interface QueryLineageRequest {
  StartArns?: string[];
  Direction?: Direction | string;
  IncludeEdges?: boolean;
  Filters?: QueryFilters;
  MaxDepth?: number;
  MaxResults?: number;
  NextToken?: string;
}
export interface Vertex {
  Arn?: string;
  Type?: string;
  LineageType?: LineageType | string;
}
export interface QueryLineageResponse {
  Vertices?: Vertex[];
  Edges?: Edge[];
  NextToken?: string;
}
export interface RegisterDevicesRequest {
  DeviceFleetName: string | undefined;
  Devices: Device[] | undefined;
  Tags?: Tag[];
}
export interface RenderableTask {
  Input: string | undefined;
}
export interface RenderingError {
  Code: string | undefined;
  Message: string | undefined;
}
export interface RenderUiTemplateRequest {
  UiTemplate?: UiTemplate;
  Task: RenderableTask | undefined;
  RoleArn: string | undefined;
  HumanTaskUiArn?: string;
}
export interface RenderUiTemplateResponse {
  RenderedContent: string | undefined;
  Errors: RenderingError[] | undefined;
}
export interface ResourceConfigForUpdate {
  KeepAlivePeriodInSeconds: number | undefined;
}
export interface RetryPipelineExecutionRequest {
  PipelineExecutionArn: string | undefined;
  ClientRequestToken?: string;
  ParallelismConfiguration?: ParallelismConfiguration;
}
export interface RetryPipelineExecutionResponse {
  PipelineExecutionArn?: string;
}
export declare const SearchSortOrder: {
  readonly ASCENDING: "Ascending";
  readonly DESCENDING: "Descending";
};
export type SearchSortOrder =
  (typeof SearchSortOrder)[keyof typeof SearchSortOrder];
export interface TrainingJob {
  TrainingJobName?: string;
  TrainingJobArn?: string;
  TuningJobArn?: string;
  LabelingJobArn?: string;
  AutoMLJobArn?: string;
  ModelArtifacts?: ModelArtifacts;
  TrainingJobStatus?: TrainingJobStatus | string;
  SecondaryStatus?: SecondaryStatus | string;
  FailureReason?: string;
  HyperParameters?: Record<string, string>;
  AlgorithmSpecification?: AlgorithmSpecification;
  RoleArn?: string;
  InputDataConfig?: Channel[];
  OutputDataConfig?: OutputDataConfig;
  ResourceConfig?: ResourceConfig;
  VpcConfig?: VpcConfig;
  StoppingCondition?: StoppingCondition;
  CreationTime?: Date;
  TrainingStartTime?: Date;
  TrainingEndTime?: Date;
  LastModifiedTime?: Date;
  SecondaryStatusTransitions?: SecondaryStatusTransition[];
  FinalMetricDataList?: MetricData[];
  EnableNetworkIsolation?: boolean;
  EnableInterContainerTrafficEncryption?: boolean;
  EnableManagedSpotTraining?: boolean;
  CheckpointConfig?: CheckpointConfig;
  TrainingTimeInSeconds?: number;
  BillableTimeInSeconds?: number;
  DebugHookConfig?: DebugHookConfig;
  ExperimentConfig?: ExperimentConfig;
  DebugRuleConfigurations?: DebugRuleConfiguration[];
  TensorBoardOutputConfig?: TensorBoardOutputConfig;
  DebugRuleEvaluationStatuses?: DebugRuleEvaluationStatus[];
  Environment?: Record<string, string>;
  RetryStrategy?: RetryStrategy;
  Tags?: Tag[];
}
export interface TrialComponentSimpleSummary {
  TrialComponentName?: string;
  TrialComponentArn?: string;
  TrialComponentSource?: TrialComponentSource;
  CreationTime?: Date;
  CreatedBy?: UserContext;
}
export interface Trial {
  TrialName?: string;
  TrialArn?: string;
  DisplayName?: string;
  ExperimentName?: string;
  Source?: TrialSource;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  MetadataProperties?: MetadataProperties;
  Tags?: Tag[];
  TrialComponentSummaries?: TrialComponentSimpleSummary[];
}
export interface TrialComponentSourceDetail {
  SourceArn?: string;
  TrainingJob?: TrainingJob;
  ProcessingJob?: ProcessingJob;
  TransformJob?: TransformJob;
}
export interface TrialComponent {
  TrialComponentName?: string;
  DisplayName?: string;
  TrialComponentArn?: string;
  Source?: TrialComponentSource;
  Status?: TrialComponentStatus;
  StartTime?: Date;
  EndTime?: Date;
  CreationTime?: Date;
  CreatedBy?: UserContext;
  LastModifiedTime?: Date;
  LastModifiedBy?: UserContext;
  Parameters?: Record<string, TrialComponentParameterValue>;
  InputArtifacts?: Record<string, TrialComponentArtifact>;
  OutputArtifacts?: Record<string, TrialComponentArtifact>;
  Metrics?: TrialComponentMetricSummary[];
  MetadataProperties?: MetadataProperties;
  SourceDetail?: TrialComponentSourceDetail;
  LineageGroupArn?: string;
  Tags?: Tag[];
  Parents?: Parent[];
  RunName?: string;
}
export interface SearchRecord {
  TrainingJob?: TrainingJob;
  Experiment?: Experiment;
  Trial?: Trial;
  TrialComponent?: TrialComponent;
  Endpoint?: Endpoint;
  ModelPackage?: ModelPackage;
  ModelPackageGroup?: ModelPackageGroup;
  Pipeline?: Pipeline;
  PipelineExecution?: PipelineExecution;
  FeatureGroup?: FeatureGroup;
  Project?: Project;
  FeatureMetadata?: FeatureMetadata;
  HyperParameterTuningJob?: HyperParameterTuningJobSearchEntity;
  Model?: ModelDashboardModel;
  ModelCard?: ModelCard;
}
export interface SearchResponse {
  Results?: SearchRecord[];
  NextToken?: string;
}
export interface SendPipelineExecutionStepFailureRequest {
  CallbackToken: string | undefined;
  FailureReason?: string;
  ClientRequestToken?: string;
}
export interface SendPipelineExecutionStepFailureResponse {
  PipelineExecutionArn?: string;
}
export interface SendPipelineExecutionStepSuccessRequest {
  CallbackToken: string | undefined;
  OutputParameters?: OutputParameter[];
  ClientRequestToken?: string;
}
export interface SendPipelineExecutionStepSuccessResponse {
  PipelineExecutionArn?: string;
}
export interface StartEdgeDeploymentStageRequest {
  EdgeDeploymentPlanName: string | undefined;
  StageName: string | undefined;
}
export interface StartInferenceExperimentRequest {
  Name: string | undefined;
}
export interface StartInferenceExperimentResponse {
  InferenceExperimentArn: string | undefined;
}
export interface StartMonitoringScheduleRequest {
  MonitoringScheduleName: string | undefined;
}
export interface StartNotebookInstanceInput {
  NotebookInstanceName: string | undefined;
}
export interface StartPipelineExecutionRequest {
  PipelineName: string | undefined;
  PipelineExecutionDisplayName?: string;
  PipelineParameters?: Parameter[];
  PipelineExecutionDescription?: string;
  ClientRequestToken?: string;
  ParallelismConfiguration?: ParallelismConfiguration;
}
export interface StartPipelineExecutionResponse {
  PipelineExecutionArn?: string;
}
export interface StopAutoMLJobRequest {
  AutoMLJobName: string | undefined;
}
export interface StopCompilationJobRequest {
  CompilationJobName: string | undefined;
}
export interface StopEdgeDeploymentStageRequest {
  EdgeDeploymentPlanName: string | undefined;
  StageName: string | undefined;
}
export interface StopEdgePackagingJobRequest {
  EdgePackagingJobName: string | undefined;
}
export interface StopHyperParameterTuningJobRequest {
  HyperParameterTuningJobName: string | undefined;
}
export interface StopInferenceExperimentRequest {
  Name: string | undefined;
  ModelVariantActions: Record<string, ModelVariantAction | string> | undefined;
  DesiredModelVariants?: ModelVariantConfig[];
  DesiredState?: InferenceExperimentStopDesiredState | string;
  Reason?: string;
}
export interface StopInferenceExperimentResponse {
  InferenceExperimentArn: string | undefined;
}
export interface StopInferenceRecommendationsJobRequest {
  JobName: string | undefined;
}
export interface StopLabelingJobRequest {
  LabelingJobName: string | undefined;
}
export interface StopMonitoringScheduleRequest {
  MonitoringScheduleName: string | undefined;
}
export interface StopNotebookInstanceInput {
  NotebookInstanceName: string | undefined;
}
export interface StopPipelineExecutionRequest {
  PipelineExecutionArn: string | undefined;
  ClientRequestToken?: string;
}
export interface StopPipelineExecutionResponse {
  PipelineExecutionArn?: string;
}
export interface StopProcessingJobRequest {
  ProcessingJobName: string | undefined;
}
export interface StopTrainingJobRequest {
  TrainingJobName: string | undefined;
}
export interface StopTransformJobRequest {
  TransformJobName: string | undefined;
}
export interface UpdateActionRequest {
  ActionName: string | undefined;
  Description?: string;
  Status?: ActionStatus | string;
  Properties?: Record<string, string>;
  PropertiesToRemove?: string[];
}
export interface UpdateActionResponse {
  ActionArn?: string;
}
export declare const ModelCardFilterSensitiveLog: (obj: ModelCard) => any;
export declare const SearchRecordFilterSensitiveLog: (obj: SearchRecord) => any;
export declare const SearchResponseFilterSensitiveLog: (
  obj: SearchResponse
) => any;
